{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"label\", \"icon\", \"isPassword\", \"hidePassword\", \"setHidePassword\", \"isDate\", \"showDatePicker\"];\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\Workspace\\\\Gray Hats\\\\PWU Thesis\\\\deathcare-app\\\\screens\\\\SignUp.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Formik } from \"formik\";\nimport { NativeBaseProvider } from \"native-base\";\nimport React, { useState } from \"react\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { StyledContainer, InnerContainer, SubTitle, StyledFormArea, StyledTextInput, StyledInputLabel, LeftIcon, RightIcon, StyledButton, ButtonText, Colors, TextLink, TextLinkContent, Line, ExtraView, ExtraText } from \"../components/styles\";\nimport { Octicons, Ionicons } from \"@expo/vector-icons\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport KeyboardAvoidingWrapper from \"../components/KeyboardAvoidingWrapper\";\nvar darkLight = Colors.darkLight,\n    tertiary = Colors.tertiary;\n\nvar SignUp = function SignUp(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      hidePassword = _useState2[0],\n      setHidePassword = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      show = _useState4[0],\n      setShow = _useState4[1];\n\n  var _useState5 = useState(new Date(2000, 0, 1)),\n      _useState6 = _slicedToArray(_useState5, 2),\n      date = _useState6[0],\n      setDate = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      dob = _useState8[0],\n      setDob = _useState8[1];\n\n  var onChange = function onChange(event, selectedDate) {\n    var currentDate = selectedDate || date;\n    setShow(false);\n    setDate(currentDate);\n    setDob(currentDate);\n  };\n\n  var showDatePicker = function showDatePicker() {\n    setShow(true);\n  };\n\n  return React.createElement(NativeBaseProvider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, React.createElement(KeyboardAvoidingWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, React.createElement(StyledContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, React.createElement(StatusBar, {\n    style: \"dark\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), React.createElement(InnerContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, React.createElement(SubTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Create an Account\"), show && React.createElement(DateTimePicker, {\n    testID: \"dateTimePicker\",\n    value: date,\n    mode: \"date\",\n    is24Hour: true,\n    display: \"default\",\n    onChange: onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), React.createElement(Formik, {\n    initialValues: {\n      name: \"\",\n      phone: \"\",\n      address: \"\",\n      email: \"\",\n      dateOfBirth: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    },\n    onSubmit: function onSubmit(values) {\n      values = _objectSpread(_objectSpread({}, values), {}, {\n        dateOfBirth: dob\n      });\n      console.log(values);\n      navigation.navigate('Login');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, function (_ref2) {\n    var handleChange = _ref2.handleChange,\n        handleBlur = _ref2.handleBlur,\n        handleSubmit = _ref2.handleSubmit,\n        values = _ref2.values;\n    return React.createElement(StyledFormArea, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, React.createElement(MyTextInput, {\n      value: values.fName,\n      label: \"Full Name\",\n      icon: \"person\",\n      placeholder: \"Juan Dela Cruz\",\n      placeholderTextColor: darkLight,\n      onChangeText: handleChange(\"fName\"),\n      onBlur: handleBlur(\"fName\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }), React.createElement(MyTextInput, {\n      value: values.phone,\n      label: \"Phone\",\n      icon: \"device-mobile\",\n      placeholder: \"+639XXXXXXXXX\",\n      placeholderTextColor: darkLight,\n      onChangeText: handleChange(\"phone\"),\n      onBlur: handleBlur(\"phone\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }), React.createElement(MyTextInput, {\n      value: values.address,\n      label: \"Address\",\n      icon: \"location\",\n      placeholder: \"Address\",\n      placeholderTextColor: darkLight,\n      onChangeText: handleChange(\"address\"),\n      onBlur: handleBlur(\"address\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }), React.createElement(MyTextInput, {\n      value: values.email,\n      label: \"Email\",\n      icon: \"mail\",\n      placeholder: \"juandelacruz@gmail.com\",\n      placeholderTextColor: darkLight,\n      onChangeText: handleChange(\"email\"),\n      onBlur: handleBlur(\"email\"),\n      keyboardType: \"email-address\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }), React.createElement(MyTextInput, {\n      value: dob ? dob.toDateString() : '',\n      label: \"Date of Birth\",\n      icon: \"calendar\",\n      placeholder: \"MM - DD - YY\",\n      placeholderTextColor: darkLight,\n      onChangeText: handleChange(\"dateOfBirth\"),\n      onBlur: handleBlur(\"dateOfBirth\"),\n      isDate: true,\n      editable: false,\n      showDatePicker: showDatePicker,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }), React.createElement(MyTextInput, {\n      value: values.password,\n      label: \"Password\",\n      icon: \"key\",\n      placeholder: \"* * * * * *\",\n      placeholderTextColor: darkLight,\n      onChangeText: handleChange(\"password\"),\n      onBlur: handleBlur(\"password\"),\n      onChangeText: handleChange(\"password\"),\n      secureTextEntry: hidePassword,\n      isPassword: true,\n      hidePassword: hidePassword,\n      setHidePassword: setHidePassword,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }), React.createElement(MyTextInput, {\n      value: values.confirmPassword,\n      label: \"Confirm Password\",\n      icon: \"key\",\n      placeholder: \"* * * * * *\",\n      placeholderTextColor: darkLight,\n      onChangeText: handleChange(\"confirmPassword\"),\n      onBlur: handleBlur(\"confirmPassword\"),\n      onChangeText: handleChange(\"confirmPassword\"),\n      secureTextEntry: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }), React.createElement(StyledButton, {\n      onPress: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, React.createElement(ButtonText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 19\n      }\n    }, \"Create account\")));\n  }), React.createElement(ExtraView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, React.createElement(ExtraText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }, \"Already have an account? \"), React.createElement(TextLink, {\n    onPress: function onPress() {\n      return navigation.navigate('Login');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 15\n    }\n  }, React.createElement(TextLinkContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, \"Sign in\"))), React.createElement(Line, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  })))));\n};\n\nvar MyTextInput = function MyTextInput(_ref3) {\n  var label = _ref3.label,\n      icon = _ref3.icon,\n      isPassword = _ref3.isPassword,\n      hidePassword = _ref3.hidePassword,\n      setHidePassword = _ref3.setHidePassword,\n      isDate = _ref3.isDate,\n      showDatePicker = _ref3.showDatePicker,\n      props = _objectWithoutProperties(_ref3, _excluded);\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 5\n    }\n  }, React.createElement(LeftIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }, React.createElement(Octicons, {\n    name: icon,\n    size: 30,\n    color: tertiary,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  })), React.createElement(StyledInputLabel, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }\n  }, label), !isDate && React.createElement(StyledTextInput, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 19\n    }\n  })), isDate && React.createElement(TouchableOpacity, {\n    onPress: showDatePicker,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }, React.createElement(StyledTextInput, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }))), isPassword && React.createElement(RightIcon, {\n    onPress: function onPress() {\n      return setHidePassword(!hidePassword);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  }, React.createElement(Ionicons, {\n    name: hidePassword ? \"md-eye-off\" : \"md-eye\",\n    size: 30,\n    color: tertiary,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["E:/Workspace/Gray Hats/PWU Thesis/deathcare-app/screens/SignUp.js"],"names":["Formik","NativeBaseProvider","React","useState","StyledContainer","InnerContainer","SubTitle","StyledFormArea","StyledTextInput","StyledInputLabel","LeftIcon","RightIcon","StyledButton","ButtonText","Colors","TextLink","TextLinkContent","Line","ExtraView","ExtraText","Octicons","Ionicons","DateTimePicker","KeyboardAvoidingWrapper","darkLight","tertiary","SignUp","navigation","hidePassword","setHidePassword","show","setShow","Date","date","setDate","dob","setDob","onChange","event","selectedDate","currentDate","showDatePicker","name","phone","address","email","dateOfBirth","password","confirmPassword","values","console","log","navigate","handleChange","handleBlur","handleSubmit","fName","toDateString","MyTextInput","label","icon","isPassword","isDate","props"],"mappings":"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","sourcesContent":["import { Formik } from \"formik\";\r\nimport { NativeBaseProvider } from \"native-base\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  StatusBar,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport { View } from \"react-native\";\r\nimport {\r\n  StyledContainer,\r\n  InnerContainer,\r\n  SubTitle,\r\n  StyledFormArea,\r\n  StyledTextInput,\r\n  StyledInputLabel,\r\n  LeftIcon,\r\n  RightIcon,\r\n  StyledButton,\r\n  ButtonText,\r\n  Colors,\r\n  TextLink,\r\n  TextLinkContent,\r\n  Line,\r\n  ExtraView,\r\n  ExtraText\r\n} from \"../components/styles\";\r\n\r\nimport { Octicons, Ionicons } from \"@expo/vector-icons\";\r\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\r\nimport KeyboardAvoidingWrapper from \"../components/KeyboardAvoidingWrapper\";\r\n\r\nconst { darkLight, tertiary } = Colors;\r\n\r\nconst SignUp = ({navigation}) => {\r\n  const [hidePassword, setHidePassword] = useState(true);\r\n  const [show, setShow] = useState(false);\r\n  const [date, setDate] = useState(new Date(2000, 0, 1));\r\n  const [dob, setDob] = useState();\r\n\r\n  const onChange = (event, selectedDate) => {\r\n    const currentDate = selectedDate || date;\r\n    setShow(false);\r\n    setDate(currentDate);\r\n    setDob(currentDate);\r\n  };\r\n\r\n  const showDatePicker = () => {\r\n    setShow(true);\r\n  };\r\n\r\n  return (\r\n    <NativeBaseProvider>\r\n      <KeyboardAvoidingWrapper>\r\n      <StyledContainer>\r\n        <StatusBar style=\"dark\" />\r\n        <InnerContainer>\r\n          <SubTitle>Create an Account</SubTitle>\r\n\r\n          {show && (\r\n            <DateTimePicker\r\n              testID=\"dateTimePicker\"\r\n              value={date}\r\n              mode=\"date\"\r\n              is24Hour={true}\r\n              display=\"default\"\r\n              onChange={onChange}\r\n            />\r\n          )}\r\n\r\n          <Formik\r\n            initialValues={{\r\n              name: \"\",\r\n              phone: \"\",\r\n              address: \"\",\r\n              email: \"\",\r\n              dateOfBirth: \"\",\r\n              password: \"\",\r\n              confirmPassword: \"\",\r\n            }}\r\n            onSubmit={(values) => {\r\n              values = {...values, dateOfBirth: dob};\r\n              console.log(values);\r\n              navigation.navigate('Login');\r\n            }}\r\n          >\r\n            {({ handleChange, handleBlur, handleSubmit, values }) => (\r\n              <StyledFormArea>\r\n                <MyTextInput\r\n                  value={values.fName}\r\n                  label=\"Full Name\"\r\n                  icon=\"person\"\r\n                  placeholder=\"Juan Dela Cruz\"\r\n                  placeholderTextColor={darkLight}\r\n                  onChangeText={handleChange(\"fName\")}\r\n                  onBlur={handleBlur(\"fName\")}\r\n                />\r\n                <MyTextInput\r\n                  value={values.phone}\r\n                  label=\"Phone\"\r\n                  icon=\"device-mobile\"\r\n                  placeholder=\"+639XXXXXXXXX\"\r\n                  placeholderTextColor={darkLight}\r\n                  onChangeText={handleChange(\"phone\")}\r\n                  onBlur={handleBlur(\"phone\")}\r\n                />\r\n                <MyTextInput\r\n                  value={values.address}\r\n                  label=\"Address\"\r\n                  icon=\"location\"\r\n                  placeholder=\"Address\"\r\n                  placeholderTextColor={darkLight}\r\n                  onChangeText={handleChange(\"address\")}\r\n                  onBlur={handleBlur(\"address\")}\r\n                />\r\n                <MyTextInput\r\n                  value={values.email}\r\n                  label=\"Email\"\r\n                  icon=\"mail\"\r\n                  placeholder=\"juandelacruz@gmail.com\"\r\n                  placeholderTextColor={darkLight}\r\n                  onChangeText={handleChange(\"email\")}\r\n                  onBlur={handleBlur(\"email\")}\r\n                  keyboardType=\"email-address\"\r\n                />\r\n                <MyTextInput\r\n                  value={dob ? dob.toDateString() : ''}\r\n                  label=\"Date of Birth\"\r\n                  icon=\"calendar\"\r\n                  placeholder=\"MM - DD - YY\"\r\n                  placeholderTextColor={darkLight}\r\n                  onChangeText={handleChange(\"dateOfBirth\")}\r\n                  onBlur={handleBlur(\"dateOfBirth\")}\r\n                  isDate={true}\r\n                  editable={false}\r\n                  showDatePicker={showDatePicker}\r\n                />\r\n                <MyTextInput\r\n                  value={values.password}\r\n                  label=\"Password\"\r\n                  icon=\"key\"\r\n                  placeholder=\"* * * * * *\"\r\n                  placeholderTextColor={darkLight}\r\n                  onChangeText={handleChange(\"password\")}\r\n                  onBlur={handleBlur(\"password\")}\r\n                  onChangeText={handleChange(\"password\")}\r\n                  secureTextEntry={hidePassword}\r\n                  isPassword={true}\r\n                  hidePassword={hidePassword}\r\n                  setHidePassword={setHidePassword}\r\n                />\r\n                <MyTextInput\r\n                  value={values.confirmPassword}\r\n                  label=\"Confirm Password\"\r\n                  icon=\"key\"\r\n                  placeholder=\"* * * * * *\"\r\n                  placeholderTextColor={darkLight}\r\n                  onChangeText={handleChange(\"confirmPassword\")}\r\n                  onBlur={handleBlur(\"confirmPassword\")}\r\n                  onChangeText={handleChange(\"confirmPassword\")}\r\n                  secureTextEntry={true}\r\n                />\r\n                <StyledButton onPress={handleSubmit}>\r\n                  <ButtonText>Create account</ButtonText>\r\n                </StyledButton>\r\n              </StyledFormArea>\r\n            )}\r\n          </Formik>\r\n            <ExtraView>\r\n              <ExtraText>Already have an account? </ExtraText>\r\n              <TextLink onPress={() => navigation.navigate('Login')}>\r\n                <TextLinkContent>Sign in</TextLinkContent>\r\n              </TextLink>\r\n            </ExtraView>\r\n            <Line></Line>\r\n        </InnerContainer>\r\n      </StyledContainer>\r\n      </KeyboardAvoidingWrapper>\r\n    </NativeBaseProvider>\r\n  );\r\n};\r\n\r\nconst MyTextInput = ({\r\n  label,\r\n  icon,\r\n  isPassword,\r\n  hidePassword,\r\n  setHidePassword,\r\n  isDate,\r\n  showDatePicker,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <View>\r\n      <LeftIcon>\r\n        <Octicons name={icon} size={30} color={tertiary} />\r\n      </LeftIcon>\r\n      <StyledInputLabel>{label}</StyledInputLabel>\r\n      {!isDate && <StyledTextInput {...props} />}\r\n      {isDate && (\r\n        <TouchableOpacity onPress={showDatePicker}>\r\n          <StyledTextInput {...props} />\r\n        </TouchableOpacity>\r\n      )}\r\n      {isPassword && (\r\n        <RightIcon onPress={() => setHidePassword(!hidePassword)}>\r\n          <Ionicons\r\n            name={hidePassword ? \"md-eye-off\" : \"md-eye\"}\r\n            size={30}\r\n            color={tertiary}\r\n          />\r\n        </RightIcon>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n"]},"metadata":{},"sourceType":"module"}