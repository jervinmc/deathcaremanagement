{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"label\", \"icon\", \"isPassword\", \"hidePassword\", \"setHidePassword\"];\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\Workspace\\\\Gray Hats\\\\PWU Thesis\\\\deathcare-app\\\\screens\\\\UpdateAccount.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport { NativeBaseProvider } from \"native-base\";\nimport { Banner, IconContainer, InnerContainer, StyledButton, StyledContainer, BannerLogo, BannerTitle, TransparentButton, SimpleButtonText, ItemText, SubTitle, PageHeader, RightIcon, StyledFormArea, StyledInputLabel, StyledTextInput, LeftIcon } from \"../components/styles\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Formik } from \"formik\";\nimport { ButtonText, Line } from \"../components/styles\";\nimport { Octicons, Ionicons } from \"@expo/vector-icons\";\nimport { Colors, PageTitle } from \"../components/styles\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport Login from \"./Login\";\nimport KeyboardAvoidingWrapper from \"../components/KeyboardAvoidingWrapper\";\nvar primary = Colors.primary,\n    brand = Colors.brand,\n    tertiary = Colors.tertiary,\n    darkLight = Colors.darkLight,\n    red = Colors.red;\n\nvar UpdateAccount = function UpdateAccount(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      hidePassword = _useState2[0],\n      setHidePassword = _useState2[1];\n\n  return React.createElement(NativeBaseProvider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, React.createElement(KeyboardAvoidingWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, React.createElement(StyledContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, React.createElement(StatusBar, {\n    style: \"dark\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), React.createElement(InnerContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, React.createElement(Banner, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, React.createElement(BannerLogo, {\n    resizeMode: \"cover\",\n    source: require(\"./../assets/img/page_logo.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }), React.createElement(BannerTitle, {\n    resizeMode: \"cover\",\n    source: require(\"./../assets/img/page_title.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  })), React.createElement(PageHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Manage Account\"), React.createElement(Line, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }), React.createElement(Formik, {\n    initialValues: {\n      username: \"\",\n      currentPassword: \"\",\n      newPassword: \"\",\n      confirmPassword: \"\"\n    },\n    onSubmit: function onSubmit(values) {\n      values = _objectSpread({}, values);\n      console.log(values);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, function (_ref2) {\n    var handleChange = _ref2.handleChange,\n        handleBlur = _ref2.handleBlur,\n        handleSubmit = _ref2.handleSubmit,\n        values = _ref2.values;\n    return React.createElement(StyledFormArea, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, React.createElement(MyTextInput, {\n      value: values.username,\n      label: \"Username\",\n      icon: \"person\",\n      placeholder: \"juandelacruz01\",\n      placeholderTextColor: darkLight,\n      onChangeText: handleChange(\"username\"),\n      onBlur: handleBlur(\"username\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }\n    }), React.createElement(MyTextInput, {\n      value: values.password,\n      label: \"Password\",\n      icon: \"key\",\n      placeholder: \"* * * * * *\",\n      placeholderTextColor: darkLight,\n      onChangeText: handleChange(\"password\"),\n      onBlur: handleBlur(\"password\"),\n      onChangeText: handleChange(\"password\"),\n      secureTextEntry: hidePassword,\n      isPassword: true,\n      hidePassword: hidePassword,\n      setHidePassword: setHidePassword,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }\n    }), React.createElement(MyTextInput, {\n      value: values.newPassword,\n      label: \"New Password\",\n      icon: \"key\",\n      placeholder: \"* * * * * *\",\n      placeholderTextColor: darkLight,\n      onChangeText: handleChange(\"newPassword\"),\n      onBlur: handleBlur(\"newPassword\"),\n      onChangeText: handleChange(\"newPassword\"),\n      secureTextEntry: hidePassword,\n      isPassword: true,\n      hidePassword: hidePassword,\n      setHidePassword: setHidePassword,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 19\n      }\n    }), React.createElement(MyTextInput, {\n      value: values.confirmPassword,\n      label: \"Confirm Password\",\n      icon: \"key\",\n      placeholder: \"* * * * * *\",\n      placeholderTextColor: darkLight,\n      onChangeText: handleChange(\"confirmPassword\"),\n      onBlur: handleBlur(\"confirmPassword\"),\n      onChangeText: handleChange(\"confirmPassword\"),\n      secureTextEntry: true,\n      setHidePassword: setHidePassword,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 19\n      }\n    }), React.createElement(StyledButton, {\n      onPress: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 19\n      }\n    }, React.createElement(ButtonText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, \"Submit\")), React.createElement(StyledButton, {\n      onPress: function onPress() {\n        return navigation.navigate(\"MyAccount\");\n      },\n      style: {\n        backgroundColor: red\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }\n    }, React.createElement(ButtonText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }, \"Cancel\")));\n  })))));\n};\n\nvar MyTextInput = function MyTextInput(_ref3) {\n  var label = _ref3.label,\n      icon = _ref3.icon,\n      isPassword = _ref3.isPassword,\n      hidePassword = _ref3.hidePassword,\n      setHidePassword = _ref3.setHidePassword,\n      props = _objectWithoutProperties(_ref3, _excluded);\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }\n  }, React.createElement(LeftIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, React.createElement(Octicons, {\n    name: icon,\n    size: 30,\n    color: tertiary,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  })), React.createElement(StyledInputLabel, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, label), React.createElement(StyledTextInput, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  })), isPassword && React.createElement(RightIcon, {\n    onPress: function onPress() {\n      return setHidePassword(!hidePassword);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, React.createElement(Ionicons, {\n    name: hidePassword ? \"md-eye-off\" : \"md-eye\",\n    size: 30,\n    color: tertiary,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default UpdateAccount;","map":{"version":3,"sources":["E:/Workspace/Gray Hats/PWU Thesis/deathcare-app/screens/UpdateAccount.js"],"names":["React","useState","NativeBaseProvider","Banner","IconContainer","InnerContainer","StyledButton","StyledContainer","BannerLogo","BannerTitle","TransparentButton","SimpleButtonText","ItemText","SubTitle","PageHeader","RightIcon","StyledFormArea","StyledInputLabel","StyledTextInput","LeftIcon","Formik","ButtonText","Line","Octicons","Ionicons","Colors","PageTitle","NavigationContainer","createDrawerNavigator","Login","KeyboardAvoidingWrapper","primary","brand","tertiary","darkLight","red","UpdateAccount","navigation","hidePassword","setHidePassword","require","username","currentPassword","newPassword","confirmPassword","values","console","log","handleChange","handleBlur","handleSubmit","password","navigate","backgroundColor","MyTextInput","label","icon","isPassword","props"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { NativeBaseProvider } from \"native-base\";\r\nimport {\r\n  Banner,\r\n  IconContainer,\r\n  InnerContainer,\r\n  StyledButton,\r\n  StyledContainer,\r\n  BannerLogo,\r\n  BannerTitle,\r\n  TransparentButton,\r\n  SimpleButtonText,\r\n  ItemText,\r\n  SubTitle,\r\n  PageHeader,\r\n  RightIcon,\r\n  StyledFormArea,\r\n  StyledInputLabel,\r\n  StyledTextInput,\r\n  LeftIcon,\r\n} from \"../components/styles\";\r\nimport {\r\n  SafeAreaView,\r\n  StatusBar,\r\n  TouchableOpacity,\r\n  View,\r\n  Text,\r\n} from \"react-native\";\r\nimport { Formik } from \"formik\";\r\nimport { ButtonText, Line } from \"../components/styles\";\r\nimport { Octicons, Ionicons } from \"@expo/vector-icons\";\r\nimport { Colors, PageTitle } from \"../components/styles\";\r\n\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\r\nimport Login from \"./Login\";\r\nimport KeyboardAvoidingWrapper from \"../components/KeyboardAvoidingWrapper\";\r\n\r\nconst { primary, brand, tertiary, darkLight, red } = Colors;\r\n\r\n\r\nconst UpdateAccount = ({navigation}) => {\r\n    const [ hidePassword, setHidePassword ] = useState(true);   \r\n  return (\r\n    <NativeBaseProvider>\r\n      <KeyboardAvoidingWrapper>\r\n        <StyledContainer>\r\n          <StatusBar style=\"dark\" />\r\n          <InnerContainer>\r\n            <Banner>\r\n              <BannerLogo\r\n                resizeMode=\"cover\"\r\n                source={require(\"./../assets/img/page_logo.png\")}\r\n              />\r\n              <BannerTitle\r\n                resizeMode=\"cover\"\r\n                source={require(\"./../assets/img/page_title.png\")}\r\n              />\r\n            </Banner>\r\n            <PageHeader>Manage Account</PageHeader>\r\n            <Line></Line>\r\n\r\n            <Formik\r\n              initialValues={{\r\n                username: \"\",\r\n                currentPassword: \"\",\r\n                newPassword: \"\",\r\n                confirmPassword: \"\",\r\n              }}\r\n              onSubmit={(values) => {\r\n                values = { ...values };\r\n                console.log(values);\r\n              }}\r\n            >\r\n              {({ handleChange, handleBlur, handleSubmit, values }) => (\r\n                <StyledFormArea>\r\n                  <MyTextInput\r\n                    value={values.username}\r\n                    label=\"Username\"\r\n                    icon=\"person\"\r\n                    placeholder=\"juandelacruz01\"\r\n                    placeholderTextColor={darkLight}\r\n                    onChangeText={handleChange(\"username\")}\r\n                    onBlur={handleBlur(\"username\")}\r\n                  />\r\n                  <MyTextInput\r\n                    value={values.password}\r\n                    label=\"Password\"\r\n                    icon=\"key\"\r\n                    placeholder=\"* * * * * *\"\r\n                    placeholderTextColor={darkLight}\r\n                    onChangeText={handleChange(\"password\")}\r\n                    onBlur={handleBlur(\"password\")}\r\n                    onChangeText={handleChange(\"password\")}\r\n                    secureTextEntry={hidePassword}\r\n                    isPassword={true}\r\n                    hidePassword={hidePassword}\r\n                    setHidePassword={setHidePassword}\r\n                  />\r\n                  <MyTextInput\r\n                    value={values.newPassword}\r\n                    label=\"New Password\"\r\n                    icon=\"key\"\r\n                    placeholder=\"* * * * * *\"\r\n                    placeholderTextColor={darkLight}\r\n                    onChangeText={handleChange(\"newPassword\")}\r\n                    onBlur={handleBlur(\"newPassword\")}\r\n                    onChangeText={handleChange(\"newPassword\")}\r\n                    secureTextEntry={hidePassword}\r\n                    isPassword={true}\r\n                    hidePassword={hidePassword}\r\n                    setHidePassword={setHidePassword}\r\n                  />\r\n                  <MyTextInput\r\n                    value={values.confirmPassword}\r\n                    label=\"Confirm Password\"\r\n                    icon=\"key\"\r\n                    placeholder=\"* * * * * *\"\r\n                    placeholderTextColor={darkLight}\r\n                    onChangeText={handleChange(\"confirmPassword\")}\r\n                    onBlur={handleBlur(\"confirmPassword\")}\r\n                    onChangeText={handleChange(\"confirmPassword\")}\r\n                    secureTextEntry={true}\r\n                    setHidePassword={setHidePassword}\r\n                  />    \r\n\r\n                  <StyledButton onPress={handleSubmit}>\r\n                    <ButtonText>Submit</ButtonText>\r\n                  </StyledButton>\r\n                  <StyledButton\r\n                    onPress={() => navigation.navigate(\"MyAccount\")}\r\n                    style={{ backgroundColor: red }}\r\n                  >\r\n                    <ButtonText>Cancel</ButtonText>\r\n                  </StyledButton>\r\n                </StyledFormArea>\r\n              )}\r\n            </Formik>\r\n          </InnerContainer>\r\n        </StyledContainer>\r\n      </KeyboardAvoidingWrapper>\r\n    </NativeBaseProvider>\r\n  );\r\n};\r\n\r\nconst MyTextInput = ({\r\n  label,\r\n  icon,\r\n  isPassword,\r\n  hidePassword,\r\n  setHidePassword,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <View>\r\n      <LeftIcon>\r\n        <Octicons name={icon} size={30} color={tertiary} />\r\n      </LeftIcon>\r\n      <StyledInputLabel>{label}</StyledInputLabel>\r\n      <StyledTextInput {...props} />\r\n      {isPassword && (\r\n        <RightIcon onPress={() => setHidePassword(!hidePassword)}>\r\n          <Ionicons\r\n            name={hidePassword ? \"md-eye-off\" : \"md-eye\"}\r\n            size={30}\r\n            color={tertiary}\r\n          />\r\n        </RightIcon>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default UpdateAccount;\r\n"]},"metadata":{},"sourceType":"module"}